[tool.poetry]
name = "FAST-OAD-CS25"
version = "0.7.0"
description = "FAST-OAD_CS25 is a FAST-OAD plugin with CS25/FAR25-related models."
readme = "README.md"
authors = [
    "Christophe DAVID <christophe.david@onera.fr>",
    "Scott DELBECQ <Scott.DELBECQ@isae-supaero.fr>"
]
packages = [
    { include = "fastoad_cs25", from = "src" },
]
exclude = ["**/tests/**"]

homepage = "https://github.com/fast-aircraft-design/FAST-OAD_CS25"
keywords = [
    "aircraft",
    "design",
    "multi-disciplinary"
]
license = "GPL-3.0-only"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics"
]

[tool.poetry.dependencies]
# IMPORTANT: when modifying this list, docs/requirements.txt must be updated for
# ReadTheDocs to be able to compile the documentation.
# A pre-commit hook has been added to do this task. As a result, any modification
# of poetry.lock file will modify docs/requirements.txt and make
# the commit fail because "files were modified by this hook". In that case,
# doing again the commit including changes in docs/requirements.txt will succeed.
python = ">=3.8, <3.12"
fast-oad-core = "^1.7.3"
pyparsing = "^3.0.0"  # needed, but not declared as required, by OpenMDAO for file_wrap utility.

[tool.poetry.group.test.dependencies]
pytest = "^8.0"
pytest-cov = "^5.0"
coverage = { version = "^7.0", extras = ["toml"] }
nbval = "^0.11"

[tool.poetry.group.doc.dependencies]
sphinx = "^4.1.2"
sphinx-rtd-theme = "^1.0"
sphinxcontrib-bibtex = "^2.3.0"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3.5.0"
nbstripout = "^0.5.0"
ruff = "0.5.5"

[tool.poetry.plugins."fastoad.plugins"]
"cs25" = "fastoad_cs25"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "semver"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.ruff]
line-length = 100
target-version = "py39"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--cov-report term-missing --cov-report html --verbose"
testpaths = ["src", "tests"]
norecursedirs = ["dist", "build", ".tox"]
filterwarnings = ["default"]

[tool.coverage.run]
branch = true
source = ["fastoad_cs25"]
omit = ["*/test/*", "*/tests/*"]
[tool.coverage.paths]
source = ["src/"]
[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ = = .__main__.:"
]
